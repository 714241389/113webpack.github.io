{"version":3,"file":"index.3575b7ca.js","sources":["../../node_modules/@suid/icons-material/Close.jsx","../../node_modules/@suid/icons-material/Person.jsx","../../node_modules/@suid/icons-material/Link.jsx","../../node_modules/@suid/icons-material/LinkOff.jsx","../../src/pages/Room/index.tsx"],"sourcesContent":["import $ from \"./utils/createSvgIcon\";\n\nexport default $(\n  () => (\n    <>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </>\n  ),\n  \"Close\"\n);\n","import $ from \"./utils/createSvgIcon\";\n\nexport default $(\n  () => (\n    <>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\n    </>\n  ),\n  \"Person\"\n);\n","import $ from \"./utils/createSvgIcon\";\n\nexport default $(\n  () => (\n    <>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\" />\n    </>\n  ),\n  \"Link\"\n);\n","import $ from \"./utils/createSvgIcon\";\n\nexport default $(\n  () => (\n    <>\n      <path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\" />\n      <path d=\"M0 24V0\" fill=\"none\" />\n    </>\n  ),\n  \"LinkOff\"\n);\n","import AppBar from \"@suid/material/AppBar\";\nimport Box from \"@suid/material/Box\";\nimport IconButton from \"@suid/material/IconButton\";\nimport Toolbar from \"@suid/material/Toolbar\";\nimport { useNavigate, useParams } from \"solid-app-router\";\nimport { Component, Show, createEffect, createResource, createSignal, onCleanup, onMount } from \"solid-js\";\nimport { useBroadClient } from \"../../helpers/BroadClient/solid\";\nimport CloseIcon from \"@suid/icons-material/Close\";\nimport Typography from \"@suid/material/Typography\";\nimport { Participant, Room, RoomOpts } from \"../../helpers/BroadClient\";\nimport Modal from \"@suid/material/Modal\";\nimport Card from \"@suid/material/Card\";\nimport CardContent from \"@suid/material/CardContent\";\nimport Button from \"@suid/material/Button\";\nimport List from \"@suid/material/List\";\nimport ListItem from \"@suid/material/ListItem\";\nimport DrawBroad, { ContextMenuEvent, DrawBroadController, DrawPoint, DrawTool } from \"../../widgets/DrawBroad\";\nimport PersonIcon from \"@suid/icons-material/Person\";\nimport Popover from \"@suid/material/Popover\";\nimport { Peer, Router } from \"../../helpers/mesh\";\nimport { SupabaseDatachannel } from \"../../helpers/mesh/supabase\";\nimport LinkIcon from \"@suid/icons-material/Link\";\nimport LinkOffIcon from \"@suid/icons-material/LinkOff\";\nimport { Frame, Message } from \"../../helpers/mesh/datachannel\";\nimport Title from \"../../widgets/Title\";\n\nconst DEFAULT_DRAWING_SIZE_X = 3000;\nconst DEFAULT_DRAWING_SIZE_Y = 3000;\n\nconst PROTO_TYPE_SEND_DRAWING = 302;\n\nenum RoomStatus {\n    \"Unknown\",\n    \"Found\",\n    \"Joined\",\n    \"NotFound\",\n}\n\nconst RoomJoiningNotice: Component<{open: boolean}> = (props) => {\n    return <Modal open={props.open}>\n        <Card\n            sx={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                maxWidth: \"650px\",\n            }}>\n            <CardContent sx={{textAlign: \"center\"}}>\n                <Typography>Communicating with Magicbroad...</Typography>\n            </CardContent>\n        </Card>\n    </Modal>;\n};\n\nconst RoomNotFoundDialog: Component<{open: boolean}> = (props) => {\n    const navigate = useNavigate();\n\n    return <Modal open={props.open}>\n        <Card\n            sx={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                maxWidth: \"650px\",\n            }}>\n            <CardContent>\n                <Typography variant=\"h6\">The Room is Missing</Typography>\n                <Typography>We could not found the room you want. The owner might have been deleted the room.</Typography>\n            </CardContent>\n            <List>\n                <ListItem sx={{paddingLeft: 0, paddingRight: 0}}>\n                    <Button variant=\"text\" sx={{width: \"100%\", justifyContent: \"flex-end\"}} onClick={() => navigate(\"/\")}>\n                        <Typography sx={{marginRight: \"20px\"}} component=\"div\">Go to the Home Page</Typography>\n                    </Button>\n                </ListItem>\n            </List>\n        </Card>\n    </Modal>;\n};\n\ninterface ContextMenuProps {\n    position: undefined | [number, number],\n    onClose: (() => void),\n    currentDrawingTool: DrawTool,\n    onChangingDrawingTool: ((newTool: DrawTool) => void),\n}\n\nconst ContextMenu: Component<ContextMenuProps> = (props) => {\n    const buildContextMenuAnchorPos = () => {\n        const [left, top] = props.position as [number, number];\n        return {left, top};\n    };\n\n    const itemSx = {cursor: \"pointer\"};\n\n    return <Popover\n        open={typeof props.position !== \"undefined\"}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={buildContextMenuAnchorPos()}\n        onClose={() => props.onClose()}\n    >\n        <List>\n            <ListItem sx={itemSx} onClick={() => props.onChangingDrawingTool(DrawTool.pen)}>\n                <Typography>Pen</Typography><Show when={props.currentDrawingTool === DrawTool.pen}>*</Show>\n            </ListItem>\n            <ListItem sx={itemSx} onClick={() => props.onChangingDrawingTool(DrawTool.erase)}>\n                <Typography>Erase</Typography><Show when={props.currentDrawingTool === DrawTool.erase}>*</Show>\n            </ListItem>\n            <ListItem sx={itemSx} onClick={() => props.onChangingDrawingTool(DrawTool.hand)}>\n                <Typography>Move</Typography><Show when={props.currentDrawingTool === DrawTool.hand}>*</Show>\n            </ListItem>\n        </List>\n    </Popover>;\n};\n\nconst RoomPage: Component = () => {\n    const params = useParams();\n    const broadCli = useBroadClient();\n    const navigate = useNavigate();\n    const [status, setStatus] = createSignal<RoomStatus>(RoomStatus.Unknown);\n    const [roomInfo, setRoomInfo] = createSignal<Room>();\n    const [currentDrawingTool, setCurrentDrawingTool] = createSignal<DrawTool>(DrawTool.pen);\n    const [contextMenuPos, setContextMenuPos] = createSignal<[number, number] | undefined>();\n    const [gRouter, setGRouter] = createSignal<Router>();\n    const drawCtl = new DrawBroadController(\"black\", 20);\n\n    const strokes: Map<string, DrawPoint[]> = new Map();\n\n    const [participants, participantsCtl] = createResource<Participant[]>(() => {\n        const room = roomInfo();\n        if (room) {\n            return broadCli.getParticipants(room.id);\n        }\n        return [];\n    });\n\n    const [roomOpts, roomOptsCtl] = createResource<RoomOpts | undefined>(() => {\n        const room = roomInfo();\n        if (room) {\n            return (broadCli.getRoomOpts(room.id)\n                .then(async (opts) => {\n                    if (!(opts.size_x && opts.size_y)) {\n                        await broadCli.setRoomOpts(room.id, {size_x: DEFAULT_DRAWING_SIZE_X, size_y: DEFAULT_DRAWING_SIZE_Y});\n                        return await broadCli.getRoomOpts(room.id);\n                    } else {\n                        return opts;\n                    }\n                }));\n        }\n        return Promise.resolve(undefined);\n    });\n\n    const onBroadContextMenu = (e: ContextMenuEvent) => {\n        setContextMenuPos([e.pageX, e.pageY]);\n    };\n\n    const getStroke = (peerId: string): DrawPoint[] => {\n        const stroke = strokes.get(peerId);\n        if (typeof stroke === \"undefined\") {\n            strokes.set(peerId, []);\n            return getStroke(peerId);\n        } else {\n            return stroke;\n        }\n    };\n\n    const onDataReceived = (message: Message) => {\n        if (message.message.length >= 1) {\n            const codeFrame = message.message[0];\n            if (codeFrame.isUInt()) {\n                const code = codeFrame.toUInt();\n                console.log(code);\n                if ((code === PROTO_TYPE_SEND_DRAWING) && message.message.length >= 5) {\n                    const [, xFrame, yFrame, lineWidthFrame, colorFrame] = message.message;\n                    const point: DrawPoint = {\n                        x: xFrame.toUInt(),\n                        y: yFrame.toUInt(),\n                        lineWidth: lineWidthFrame.toUInt(),\n                        color: colorFrame.toString(),\n                    };\n                    const stroke = getStroke(message.srcUserDeviceId);\n                    stroke.push(point);\n                    drawCtl.draw(stroke);\n                } else if (code === PROTO_TYPE_SEND_DRAWING && message.message.length >= 2) {\n                    strokes.set(message.srcUserDeviceId, []);\n                }\n            }\n        }\n    };\n\n    const onDrawing = (stroke: DrawPoint[]) => {\n        const point = stroke[stroke.length-1];\n        const routerg = gRouter();\n        if (routerg) {\n            routerg.broadcast([\n                Frame.fromUInt(PROTO_TYPE_SEND_DRAWING, true),\n                Frame.fromUInt(point.x, true),\n                Frame.fromUInt(point.y, true),\n                Frame.fromUInt(point.lineWidth, true),\n                Frame.fromString(point.color, false),\n            ], true);\n        }\n    };\n\n    const onDrawingEnd = () => {\n        const routerg = gRouter();\n        if (routerg) {\n            routerg.broadcast([\n                Frame.fromUInt(PROTO_TYPE_SEND_DRAWING, true),\n                Frame.zero(0),\n            ], true);\n        }\n    };\n\n    const connectMesh = (roomId: string) => {\n        const alterChan = SupabaseDatachannel.ofRoom(broadCli.supabase, roomId, broadCli.getUserDeviceId());\n        const router = new Router(broadCli.getUserDeviceId(), alterChan, roomId);\n        router.bus.on(\"addpeer\", (peer: Peer) => {\n            console.log(\"addpeer\", peer);\n        });\n        router.bus.on(\"removepeer\", (peer: Peer) => {\n            peer.disconnect();\n        });\n        router.bus.on(\"data\", onDataReceived);\n        return router;\n    };\n\n    onMount(async () => {\n        const room = await broadCli.findRoomById(params.id);\n        if (room) {\n            setRoomInfo(room);\n            setStatus(RoomStatus.Found);\n            if (!await broadCli.isJoinedRoomById(room.id)) {\n                await broadCli.joinRoomById(room.id);\n            }\n            setStatus(RoomStatus.Joined);\n            roomOptsCtl.refetch();\n        } else {\n            setStatus(RoomStatus.NotFound);\n        }\n    });\n\n    createEffect(() => {\n        if (status() === RoomStatus.Joined) {\n            participantsCtl.refetch();\n        }\n    });\n\n    createEffect(() => {\n        drawCtl.setTool(currentDrawingTool());\n    });\n\n    createEffect(() => {\n        const opts = roomOpts();\n        if (opts) {\n            if (opts.size_x && opts.size_y) {\n                drawCtl.setOffscreenSize([opts.size_x, opts.size_y]);\n            }\n        } else {\n            roomOptsCtl.refetch();\n        }\n    });\n\n    createEffect(() => {\n        const room = roomInfo();\n        if (room) {\n            setGRouter(prev => {\n                if (prev && prev.roomId !== room.id) {\n                    prev.stop();\n                    return connectMesh(room.id);\n                } else if (typeof prev === \"undefined\") {\n                    return connectMesh(room.id);\n                } else {\n                    return prev;\n                }\n            });\n        }\n    });\n\n    createEffect(() => {\n        const routerg = gRouter();\n        if (routerg) {\n            routerg.broadcastPeerList();\n        }\n    });\n\n    onCleanup(() => {\n        const routerg = gRouter();\n        if (routerg) {\n            routerg.stop();\n        }\n    });\n\n    const shouldShowJoiningNotice = () => status() === RoomStatus.Unknown || status() === RoomStatus.Found;\n\n    const shouldShowRoomNotFound = () => status() === RoomStatus.NotFound;\n\n    const getTitle = () => (status() === RoomStatus.Found ? \"Magicbroad Room\": `Magicbroad: \"${roomInfo()?.name}\"`);\n    \n    return <>\n        <Title title={getTitle()} />\n        <RoomJoiningNotice open={shouldShowJoiningNotice()} />\n        <RoomNotFoundDialog open={shouldShowRoomNotFound()} />\n        <ContextMenu\n            position={contextMenuPos()}\n            onClose={() => setContextMenuPos()}\n            currentDrawingTool={currentDrawingTool()}\n            onChangingDrawingTool={(newTool) => setCurrentDrawingTool(newTool)}\n        />\n        <Box sx={{flexGrow: 1}}>\n            <AppBar position=\"absolute\" color=\"transparent\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"close\"\n                        sx={{mr: 2}}\n                        onClick={() => navigate(\"/\")}\n                    ><CloseIcon /></IconButton>\n                    <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\n                        {() => roomInfo()?.name}\n                    </Typography>\n                    <Button size=\"large\" color=\"inherit\" variant=\"text\">\n                        <Show when={gRouter()} fallback={<LinkOffIcon />}><LinkIcon /></Show>\n                    </Button>\n                    <Button\n                        size=\"large\" color=\"inherit\" variant=\"text\">\n                        <PersonIcon />{participants.loading? \"...\" : participants()?.length}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </Box>\n        <DrawBroad\n            ctl={drawCtl}\n            onContextMenu={onBroadContextMenu}\n            onStart={onDrawing}\n            onDrawing={onDrawing}\n            onEnd={onDrawingEnd}\n        />\n    </>;\n};\n\nexport default RoomPage;\n"],"names":["$","_tmpl$","_tmpl$2","DEFAULT_DRAWING_SIZE_X","DEFAULT_DRAWING_SIZE_Y","PROTO_TYPE_SEND_DRAWING","RoomStatus","RoomJoiningNotice","props","_$createComponent","open","position","top","left","transform","maxWidth","textAlign","RoomNotFoundDialog","navigate","useNavigate","paddingLeft","paddingRight","width","justifyContent","marginRight","ContextMenu","buildContextMenuAnchorPos","itemSx","cursor","onClose","onChangingDrawingTool","DrawTool","pen","currentDrawingTool","erase","hand","RoomPage","params","useParams","broadCli","useBroadClient","status","setStatus","createSignal","Unknown","roomInfo","setRoomInfo","setCurrentDrawingTool","contextMenuPos","setContextMenuPos","gRouter","setGRouter","drawCtl","DrawBroadController","strokes","Map","participants","participantsCtl","createResource","room","getParticipants","id","roomOpts","roomOptsCtl","getRoomOpts","then","opts","size_x","size_y","setRoomOpts","Promise","resolve","undefined","onBroadContextMenu","e","pageX","pageY","getStroke","peerId","stroke","get","set","onDataReceived","message","length","codeFrame","isUInt","code","toUInt","console","log","xFrame","yFrame","lineWidthFrame","colorFrame","point","x","y","lineWidth","color","toString","srcUserDeviceId","push","draw","onDrawing","routerg","broadcast","Frame","fromUInt","fromString","onDrawingEnd","zero","connectMesh","roomId","alterChan","SupabaseDatachannel","ofRoom","supabase","getUserDeviceId","router","Router","bus","on","peer","disconnect","onMount","findRoomById","Found","isJoinedRoomById","joinRoomById","Joined","refetch","NotFound","createEffect","setTool","setOffscreenSize","prev","stop","broadcastPeerList","onCleanup","shouldShowJoiningNotice","shouldShowRoomNotFound","getTitle","name","newTool","flexGrow","mr","loading"],"mappings":"gyBAEA,GAAeA,IAAAA,EACb,IADc,CAAAC,GAAA,UAAA,EAAA,EAAAC,GAAA,UAAA,EAAA,CAAA,EAOd,OAPc,oOCAhB,GAAeF,IAAAA,EACb,IADc,CAAAC,GAAA,UAAA,EAAA,EAAAC,GAAA,UAAA,EAAA,CAAA,EAOd,QAPc,0UCAhB,GAAeF,IAAAA,EACb,IADc,CAAAC,GAAA,UAAA,EAAA,EAAAC,GAAA,UAAA,EAAA,CAAA,EAOd,MAPc,kbCAhB,GAAeF,IAAAA,EACb,IADc,CAAA,GAAA,UAAA,EAAA,EAAA,GAAA,UAAA,EAAA,CAAA,EAOd,SAPc,ECwBhB,KAAMG,IAAyB,IACzBC,GAAyB,IAEzBC,EAA0B,OAE3BC,aAAAA,GAAAA,EAAAA,uBAAAA,EAAAA,mBAAAA,EAAAA,qBAAAA,EAAAA,wBAAAA,GAAAA,GAAAA,QAOL,KAAMC,IAAiDC,GACnDC,EAAQ,EAAR,CAAA,GAAc,OAAd,CAAA,MAAoBD,GAAME,IAA1B,EAAA,GAAA,WAAA,CAAA,MAAAD,GACK,EADL,CAEQ,GAAI,CACAE,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,SAAU,OAPtB,EAAA,GAAA,WAAA,CAAA,MAAAN,GASS,EATT,CASqB,GAAI,CAACO,UAAW,QATrC,EAAA,GAAA,WAAA,CAAA,MAAAP,GAUa,EAVb,CAAA,SAAA,kCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAgBEQ,GAAkDT,GAAU,CAC9D,KAAMU,GAAWC,IAEjB,MAAAV,GAAQ,EAAR,CAAA,GAAc,OAAd,CAAA,MAAoBD,GAAME,IAA1B,EAAA,GAAA,WAAA,CAAA,MAAAD,GACK,EADL,CAEQ,GAAI,CACAE,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,SAAU,OAPtB,EAAA,GAAA,WAAA,CAAA,MAAA,CAAAN,EASS,EATT,CAAA,GAAA,WAAA,CAAA,MAAA,CAAAA,EAUa,EAVb,CAUwB,QAAQ,KAVhC,SAAA,qBAAA,CAAA,EAAAA,EAWa,EAXb,CAAA,SAAA,mFAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAA,EAaS,EAbT,CAAA,GAAA,WAAA,CAAA,MAAAA,GAca,EAdb,CAcsB,GAAI,CAACW,YAAa,EAAGC,aAAc,CAdzD,EAAA,GAAA,WAAA,CAAA,MAAAZ,GAeiB,EAfjB,CAewB,QAAQ,OAAO,GAAI,CAACa,MAAO,OAAQC,eAAgB,UAf3E,EAewF,QAAS,IAAML,EAAS,GAAD,EAf/G,GAAA,WAAA,CAAA,MAAAT,GAgBqB,EAhBrB,CAgBgC,GAAI,CAACe,YAAa,MAhBlD,EAgB2D,UAAU,MAhBrE,SAAA,qBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAHJ,EAkCMC,GAA4CjB,GAAU,CACxD,KAAMkB,GAA4B,IAAM,CACpC,KAAM,CAACb,EAAMD,GAAOJ,EAAMG,SAC1B,MAAO,CAACE,OAAMD,QAGZe,EAAS,CAACC,OAAQ,WAExB,MAAAnB,GAAQ,GAAR,CAAA,GACI,OADJ,CAAA,MACU,OAAOD,GAAMG,UAAa,WADpC,EAEI,gBAAgB,iBAFpB,GAGI,iBAHJ,CAAA,MAGoBe,GAAyB,CAH7C,EAII,QAAS,IAAMlB,EAAMqB,QAJzB,EAAA,GAAA,WAAA,CAAA,MAAApB,GAMK,EANL,CAAA,GAAA,WAAA,CAAA,MAAA,CAAAA,EAOS,EAPT,CAOkB,GAAIkB,EAAQ,QAAS,IAAMnB,EAAMsB,sBAAsBC,EAASC,GAArCxB,EAP7C,GAAA,WAAA,CAAA,MAAA,CAAAC,EAQa,EARb,CAAA,SAAA,KAAA,CAAA,EAAAA,EAQyC,EARzC,CAAA,GAQ8C,OAR9C,CAAA,MAQoDD,GAAMyB,qBAAuBF,EAASC,GAR1F,EAAA,SAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAvB,EAUS,EAVT,CAUkB,GAAIkB,EAAQ,QAAS,IAAMnB,EAAMsB,sBAAsBC,EAASG,KAArC1B,EAV7C,GAAA,WAAA,CAAA,MAAA,CAAAC,EAWa,EAXb,CAAA,SAAA,OAAA,CAAA,EAAAA,EAW2C,EAX3C,CAAA,GAWgD,OAXhD,CAAA,MAWsDD,GAAMyB,qBAAuBF,EAASG,KAX5F,EAAA,SAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAzB,EAaS,EAbT,CAakB,GAAIkB,EAAQ,QAAS,IAAMnB,EAAMsB,sBAAsBC,EAASI,IAArC3B,EAb7C,GAAA,WAAA,CAAA,MAAA,CAAAC,EAca,EAdb,CAAA,SAAA,MAAA,CAAA,EAAAA,EAc0C,EAd1C,CAAA,GAc+C,OAd/C,CAAA,MAcqDD,GAAMyB,qBAAuBF,EAASI,IAd3F,EAAA,SAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CARJ,EA4BMC,GAAsB,IAAM,CAC9B,KAAMC,GAASC,KACTC,EAAWC,KACXtB,EAAWC,IACX,CAACsB,EAAQC,GAAaC,EAAyBrC,EAAWsC,OAAxB,EAClC,CAACC,EAAUC,GAAeH,EAAY,EACtC,CAACV,EAAoBc,GAAyBJ,EAAuBZ,EAASC,GAApB,EAC1D,CAACgB,EAAgBC,GAAqBN,EAAY,EAClD,CAACO,EAASC,GAAcR,EAAY,EACpCS,EAAU,GAAIC,IAAoB,QAAS,EAAjC,EAEVC,EAAoC,GAAIC,KAExC,CAACC,EAAcC,GAAmBC,EAA8B,IAAM,CACxE,KAAMC,GAAOd,IACb,MAAIc,GACOpB,EAASqB,gBAAgBD,EAAKE,EAA9BtB,EAEJ,EAL2C,CAAA,EAQhD,CAACuB,EAAUC,GAAeL,EAAqC,IAAM,CACvE,KAAMC,GAAOd,IACb,MAAIc,GACQpB,EAASyB,YAAYL,EAAKE,EAA1BtB,EACH0B,KAAK,KAAOC,IACHA,EAAKC,QAAUD,EAAKE,OAIfF,EAHP,MAAM3B,GAAS8B,YAAYV,EAAKE,GAAI,CAACM,OAAQhE,GAAwBiE,OAAQhE,EAAzC,CAA9BmC,EACC,KAAMA,GAASyB,YAAYL,EAAKE,EAA1BtB,EAJjBA,EAUL+B,QAAQC,QAAQC,MAAhBF,CAbmC,CAAA,EAgBxCG,EAAsBC,GAAwB,CAChDzB,EAAkB,CAACyB,EAAEC,MAAOD,EAAEE,KAAZ,CAAD,GAGfC,EAAaC,GAAgC,CAC/C,KAAMC,GAASzB,EAAQ0B,IAAIF,CAAZxB,EACf,MAAI,OAAOyB,IAAW,YAClBzB,GAAQ2B,IAAIH,EAAQ,CAAA,CAApBxB,EACOuB,EAAUC,CAAD,GAETC,GAITG,EAAkBC,GAAqB,CACzC,GAAIA,EAAQA,QAAQC,QAAU,EAAG,CAC7B,KAAMC,GAAYF,EAAQA,QAAQ,GAClC,GAAIE,EAAUC,SAAU,CACpB,KAAMC,GAAOF,EAAUG,SAEvB,GADAC,QAAQC,IAAIH,CAAZE,EACKF,IAASlF,GAA4B8E,EAAQA,QAAQC,QAAU,EAAG,CACnE,KAAM,CAAA,CAAGO,EAAQC,EAAQC,GAAgBC,IAAcX,EAAQA,QACzDY,GAAmB,CACrBC,EAAGL,EAAOH,OADW,EAErBS,EAAGL,EAAOJ,OAFW,EAGrBU,UAAWL,GAAeL,OAHL,EAIrBW,MAAOL,GAAWM,SAAXN,GAELf,EAASF,EAAUM,EAAQkB,eAAT,EACxBtB,EAAOuB,KAAKP,EAAZhB,EACA3B,EAAQmD,KAAKxB,CAAb3B,CAVJ,KAWO,AAAImC,KAASlF,GAA2B8E,EAAQA,QAAQC,QAAU,GACrE9B,EAAQ2B,IAAIE,EAAQkB,gBAAiB,CAArC/C,CAAAA,CAEP,CACJ,GAGCkD,EAAazB,GAAwB,CACvC,KAAMgB,GAAQhB,EAAOA,EAAOK,OAAO,GAC7BqB,EAAUvD,IAChB,AAAIuD,GACAA,EAAQC,UAAU,CACdC,EAAMC,SAASvG,EAAyB,EAAxCsG,EACAA,EAAMC,SAASb,EAAMC,EAAG,EAAxBW,EACAA,EAAMC,SAASb,EAAME,EAAG,EAAxBU,EACAA,EAAMC,SAASb,EAAMG,UAAW,EAAhCS,EACAA,EAAME,WAAWd,EAAMI,MAAO,EAA9BQ,CALc,EAMf,EANHF,GAUFK,EAAe,IAAM,CACvB,KAAML,GAAUvD,IAChB,AAAIuD,GACAA,EAAQC,UAAU,CACdC,EAAMC,SAASvG,EAAyB,EAAxCsG,EACAA,EAAMI,KAAK,CAAXJ,CAFc,EAGf,EAHHF,GAOFO,EAAeC,GAAmB,CACpC,KAAMC,GAAYC,GAAoBC,OAAO7E,EAAS8E,SAAUJ,EAAQ1E,EAAS+E,gBAAT/E,CAAtD4E,EACZI,EAAS,GAAIC,IAAOjF,EAAS+E,kBAAmBJ,EAAWD,CAAlD,EACfM,SAAOE,IAAIC,GAAG,UAAYC,GAAe,CACrClC,QAAQC,IAAI,UAAWiC,CAAvBlC,EADJ8B,EAGAA,EAAOE,IAAIC,GAAG,aAAeC,GAAe,CACxCA,EAAKC,WAALD,EADJJ,EAGAA,EAAOE,IAAIC,GAAG,OAAQxC,CAAtBqC,EACOA,GAGXM,GAAQ,SAAY,CAChB,KAAMlE,GAAO,KAAMpB,GAASuF,aAAazF,EAAOwB,EAA7BtB,EACnB,AAAIoB,EACAb,GAAYa,CAAD,EACXjB,EAAUpC,EAAWyH,KAAZ,EACJ,KAAMxF,GAASyF,iBAAiBrE,EAAKE,EAA/BtB,GACP,KAAMA,GAAS0F,aAAatE,EAAKE,EAA3BtB,EAEVG,EAAUpC,EAAW4H,MAAZ,EACTnE,EAAYoE,QAAZpE,GAEArB,EAAUpC,EAAW8H,QAAZ,CAXV,CAAA,EAePC,EAAa,IAAM,CACf,AAAI5F,EAAM,IAAOnC,EAAW4H,QACxBzE,EAAgB0E,QAAhB1E,CAFI,CAAA,EAMZ4E,EAAa,IAAM,CACfjF,EAAQkF,QAAQrG,EAAkB,CAAlCmB,CADQ,CAAA,EAIZiF,EAAa,IAAM,CACf,KAAMnE,GAAOJ,IACb,AAAII,EACIA,EAAKC,QAAUD,EAAKE,QACpBhB,EAAQmF,iBAAiB,CAACrE,EAAKC,OAAQD,EAAKE,MAAnB,CAAzBhB,EAGJW,EAAYoE,QAAZpE,CAPI,CAAA,EAWZsE,EAAa,IAAM,CACf,KAAM1E,GAAOd,IACb,AAAIc,GACAR,EAAWqF,GACHA,GAAQA,EAAKvB,SAAWtD,EAAKE,GAC7B2E,GAAKC,KAALD,EACOxB,EAAYrD,EAAKE,EAAN,GACX,MAAO2E,IAAS,YAChBxB,EAAYrD,EAAKE,EAAN,EAEX2E,CAPL,CAHN,CAAA,EAgBZH,EAAa,IAAM,CACf,KAAM5B,GAAUvD,IAChB,AAAIuD,GACAA,EAAQiC,kBAARjC,CAHI,CAAA,EAOZkC,GAAU,IAAM,CACZ,KAAMlC,GAAUvD,IAChB,AAAIuD,GACAA,EAAQgC,KAARhC,CAHC,CAAA,EAOT,KAAMmC,GAA0B,IAAMnG,MAAanC,EAAWsC,SAAWH,EAAM,IAAOnC,EAAWyH,MAE3Fc,EAAyB,IAAMpG,MAAanC,EAAW8H,SAEvDU,EAAW,IAAA,OAAOrG,aAAanC,EAAWyH,MAAQ,kBAAoB,gBAAelF,KAAQ,IAARA,cAAYkG,SAEvG,MAAA,CAAAtI,EACK,GADL,CAAA,GACW,QADX,CAAA,MACkBqI,GAAQ,CAD1B,CAAA,CAAA,EAAArI,EAEK,GAFL,CAAA,GAEuB,OAFvB,CAAA,MAE6BmI,GAAuB,CAFpD,CAAA,CAAA,EAAAnI,EAGK,GAHL,CAAA,GAGwB,OAHxB,CAAA,MAG8BoI,GAAsB,CAHpD,CAAA,CAAA,EAAApI,EAIK,GAJL,CAAA,GAKQ,WALR,CAAA,MAKkBuC,GAAc,CALhC,EAMQ,QAAS,IAAMC,EANvB,EAAA,GAOQ,qBAPR,CAAA,MAO4BhB,GAAkB,CAP9C,EAQQ,sBAAwB+G,GAAYjG,EAAsBiG,CAAD,CARjE,CAAA,EAAAvI,EAUK,GAVL,CAUS,GAAI,CAACwI,SAAU,CAVxB,EAAA,GAAA,WAAA,CAAA,MAAAxI,GAWS,GAXT,CAWgB,SAAS,WAAW,MAAM,cAX1C,GAAA,WAAA,CAAA,MAAAA,GAYa,GAZb,CAAA,GAAA,WAAA,CAAA,MAAA,CAAAA,EAaiB,GAbjB,CAcoB,KAAK,QACL,KAAK,QACL,MAAM,UAhB1B,aAiB+B,QACX,GAAI,CAACyI,GAAI,CAlB7B,EAmBoB,QAAS,IAAMhI,EAAS,GAAD,EAnB3C,GAAA,WAAA,CAAA,MAAAT,GAoBkB,GApBlB,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAA,EAqBiB,EArBjB,CAqB4B,QAAQ,KAAK,UAAU,MAAM,GAAI,CAACwI,SAAU,CArBxE,EAAA,SAsBqB,IAAA,OAAMpG,WAAQ,IAARA,cAAYkG,KAtBvC,CAAA,EAAAtI,EAwBiB,EAxBjB,CAwBwB,KAAK,QAAQ,MAAM,UAAU,QAAQ,OAxB7D,GAAA,WAAA,CAAA,MAAAA,GAyBqB,EAzBrB,CAAA,GAyB0B,OAzB1B,CAAA,MAyBgCyC,GAAO,CAzBvC,EAAA,GAyB2C,WAzB3C,CAAA,MAAAzC,GAyBsD,GAzBtD,CAAA,CAAA,CAAA,EAAA,GAAA,WAAA,CAAA,MAAAA,GAyBuE,GAzBvE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAA,EA2BiB,EA3BjB,CA4BoB,KAAK,QAAQ,MAAM,UAAU,QAAQ,OA5BzD,GAAA,WAAA,CAAA,MA6BqB,CAAAA,EAAA,GAAc+C,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,OAAAA,SAAAA,IAAAA,CAAAA,CAAAA,EAAa2F,QAAb3F,EAAAA,EAAAA,EAAsB,MAAQA,KAAY,IAAZA,cAAgB4B,OA7BjF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA3E,EAkCK,GAlCL,CAmCQ,IAAK2C,EACL,cAAeqB,EACf,QAAS+B,EACT,UAAWA,EACX,MAAOM,CAvCf,CAAA,CAAA,CAxLJ"}