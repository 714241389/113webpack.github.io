import{b as m,v as R}from"./getDeviceId.e8f3946a.js";import{$ as L}from"./index.0b0797f8.js";var S={exports:{}};(function(i,e){(function(n,s){i.exports=s(),i.exports.default=i.exports})(L,function(){var n=function(){this.listeners={},this.registerListener=function(t,r,o){var a=t.constructor.name;o=this.validateNumber(o||"any"),a!=="Array"&&(t=[t]),t.forEach(function(d){if(d.constructor.name!=="String")throw new Error("Only `String` and array of `String` are accepted for the event names!");s.listeners[d]=s.listeners[d]||[],s.listeners[d].push({callback:r,number:o})})},this.validateNumber=function(t){var r=t.constructor.name;if(r==="Number")return t;if(r==="String"&&t.toLowerCase()==="any")return"any";throw new Error("Only `Number` and `any` are accepted in the number of possible executions!")},this.toBeRemoved=function(t){var r=t.number;return t.execution=t.execution||0,t.execution++,!(r==="any"||t.execution<r)};var s=this;return{on:function(t,r){s.registerListener.bind(s)(t,r,"any")},once:function(t,r){s.registerListener.bind(s)(t,r,1)},exactly:function(t,r,o){s.registerListener.bind(s)(r,o,t)},die:function(t){delete s.listeners[t]},off:function(t){this.die(t)},detach:function(t,r){if(r===void 0)return s.listeners[t]=[],!0;for(var o in s.listeners[t])if(s.listeners[t].hasOwnProperty(o)&&s.listeners[t][o].callback===r)return s.listeners[t].splice(o,1),this.detach(t,r);return!0},detachAll:function(){for(var t in s.listeners)s.listeners.hasOwnProperty(t)&&this.detach(t)},emit:function(t,r){var o=[];for(var a in s.listeners)if(s.listeners.hasOwnProperty(a)&&(a===t&&Array.prototype.push.apply(o,s.listeners[a]),a.indexOf("*")>=0)){var d=a.replace(/\*\*/,"([^.]+.?)+");d=d.replace(/\*/g,"[^.]+");var l=t.match(d);l&&t===l[0]&&Array.prototype.push.apply(o,s.listeners[a])}var I=arguments;r=r||this,o.forEach(function(u,A){var g=u.callback;u.number,r&&(g=g.bind(r));var y=[];Object.keys(I).map(function(D){D>1&&y.push(I[D])}),s.toBeRemoved(u)&&s.listeners[t].splice(A,1),g.apply(null,y)})}}};return n})})(S);var f=S.exports;const c=class{constructor(i){this.buffer=i}static zero(i){const e=i>c.SHORT_MAX_LENGTH,n=(e?c.LONG_HEADER_SIZE:c.SHORT_HEADER_SIZE)+i,s=new Uint8ClampedArray(n),t=new c(s);return t.setFlag("long",e),t.length=i,t}getFlags(){const i=this.buffer.at(0);return{more:(i&c.FLAG_MORE)>0,long:(i&c.FLAG_LONG)>0}}setFlag(i,e){const n=this.buffer.at(0);return i==="more"?this.buffer[0]=e?n|c.FLAG_MORE:n&~c.FLAG_MORE:i==="long"&&(this.buffer[0]=e?n|c.FLAG_LONG:n&~c.FLAG_LONG),this.getFlags()}validateLength(){if(this.byteLength>1){const i=this.getFlags().long?c.LONG_HEADER_SIZE:c.SHORT_HEADER_SIZE;if(this.byteLength>=i&&this.byteLength>=i+this.length)return this.length}return null}get length(){return this.getFlags().long?new DataView(this.buffer.buffer,1+this.buffer.byteOffset,4).getUint32(0):new DataView(this.buffer.buffer,1+this.buffer.byteOffset,2).getUint16(0)}set length(i){this.getFlags().long?new DataView(this.buffer.buffer,1+this.buffer.byteOffset,4).setInt32(0,i):new DataView(this.buffer.buffer,1+this.buffer.byteOffset,2).setInt16(0,i)}get byteLength(){return this.buffer.length}data(){return this.getFlags().long?this.buffer.subarray(c.LONG_HEADER_SIZE,c.LONG_HEADER_SIZE+this.length):this.buffer.subarray(c.SHORT_HEADER_SIZE,c.SHORT_HEADER_SIZE+this.length)}dataView(i){const e=typeof i!="undefined"?Math.min(i,this.length):this.length,n=this.headerLength;return new DataView(this.buffer.buffer,n+this.buffer.byteOffset,e)}static fromArray(i,e){const n=c.zero(i.length);return n.data().set(i),n.setFlag("more",e||!1),n}static fromString(i,e){const s=new TextEncoder().encode(i);return this.fromArray(s,e)}toString(){return new TextDecoder("utf-8").decode(this.data())}static fromUInt(i,e){const n=new Uint8Array(4);return new DataView(n.buffer).setUint32(0,i),c.fromArray(n,e)}toUInt(){return this.dataView().getUint32(0)}isUInt(){return this.length===4}static fromBigUInt(i,e){const n=new Uint8Array(8);return new DataView(n.buffer).setBigUint64(0,i),c.fromArray(n,e)}toBigUInt(){return this.dataView().getBigUint64(0)}isBigUInt(){return this.length===8}static pack(...i){const e=i.map(t=>t.byteLength).reduce((t,r)=>t+r,0),n=new Uint8Array(e);let s=0;for(const t of i)n.set(t.buffer,s),s+=t.byteLength;return n}static readHeader(i){if(i.length===0)return null;const e=i[0],n=(e&this.FLAG_MORE)>0,s=(e&this.FLAG_LONG)>0,t=s?this.LONG_HEADER_SIZE:this.SHORT_HEADER_SIZE;if(i.length<t)return null;const r=t-1,o=new Uint8Array(r);o.set(i.subarray(1,t),0);const a=new DataView(o.buffer,0,r),d={more:n,long:s},l=s?a.getUint32(0):a.getUint16(0);return[d,l]}static unpack(i){let e=i;const n=[];for(;e.length>0;){const s=this.readHeader(e);if(s){const[t,r]=s,o=t.long?this.LONG_HEADER_SIZE:this.SHORT_HEADER_SIZE;if(e.length>=r+o){if(n.push(new c(e.subarray(0,o+r))),e=e.subarray(o+r),!t.more)break}else return[n,e,r+o-e.length]}else e=new Uint8ClampedArray(0)}return[n,e,0]}get headerLength(){return this.getFlags().long?c.LONG_HEADER_SIZE:c.SHORT_HEADER_SIZE}get paddingLength(){return this.byteLength-this.headerLength-this.length}clone(i){const e=new Uint8ClampedArray(this.headerLength+this.length+(i||0));return e.set(this.buffer.slice(0,this.headerLength+this.length)),new c(e)}};let h=c;h.FLAG_MORE=1;h.FLAG_LONG=1<<1;h.SHORT_MAX_LENGTH=2^16-(1+2);h.LONG_MAX_LENGTH=2^32-(1+4);h.SHORT_HEADER_SIZE=1+2;h.LONG_HEADER_SIZE=1+4;const T=i=>{if(typeof i!="string")return typeof i.arrayBuffer!="undefined"?i.arrayBuffer():Promise.resolve(i);{const e=new TextEncoder;return Promise.resolve(e.encode(i))}};class U{constructor(e){this.bus=new f,this.rtcDataChan=e;const n=async s=>this.onRemoteData(s);this.rtcDataChan.addEventListener("open",()=>{this.bus.emit("open",this),this.rtcDataChan.addEventListener("message",n)}),this.rtcDataChan.addEventListener("close",()=>{this.rtcDataChan.removeEventListener("message",n),this.bus.emit("close",this)})}async send(e){const n=[h.fromString(e.dstUserDeviceId,!0),h.fromString(e.roomId,!0),h.fromString(e.srcUserDeviceId,!0),...e.message];this.rtcDataChan.send(h.pack(...n))}async onRemoteData(e){const n=await T(e.data),[s]=h.unpack(new Uint8ClampedArray(n)),[t,r,o,...a]=s,d={dstUserDeviceId:t.toString(),roomId:r.toString(),srcUserDeviceId:o.toString(),message:a};this.bus.emit("data",this,d)}close(){this.rtcDataChan.close()}}var P=(i,e=!1,n="Timeout")=>new Promise((s,t)=>setTimeout(e?()=>t(n):s,i));const b=1,E=2,v=3,w=4,B=255,k="magicmesh",H=64,M={iceServers:[{urls:"stun:stun.stunprotocol.org"}]};var N=(i=>(i.connecting="connecting",i.connected="connected",i.disconnected="disconnected",i.closed="closed",i.failed="failed",i.unknown="unknown",i))(N||{});class _{constructor(e,n){this.userDeviceId=e,this.connection=new RTCPeerConnection(M),this.clk=n,this.datachannel=new U(this.connection.createDataChannel(k,{protocol:"magicmesh-rtc0",id:H,negotiated:!0})),this.connectionState="unknown",this.bus=new f,this.makingOffer=!1,this.setupConnectionState(),this.connection.addEventListener("negotiationneeded",()=>this.bus.emit("negotiationneeded",void 0,this)),this.connection.addEventListener("icecandidate",s=>this.bus.emit("icecandidate",void 0,this,s)),this.connection.addEventListener("iceconnectionstatechange",()=>{this.connection.iceConnectionState==="failed"&&this.connection.restartIce()})}setupConnectionState(){typeof this.connection.connectionState!="undefined"?this.connection.addEventListener("connectionstatechange",()=>{switch(this.connection.connectionState){case"new":case"connecting":this.connectionState="connecting";break;case"closed":this.connectionState="closed";break;case"connected":this.connectionState="connected";break;case"disconnected":this.connectionState="disconnected";break;case"failed":this.connectionState="failed";break;default:this.connectionState="unknown";break}this.bus.emit("connectionstatechange",this,this.connectionState)}):this.connection.addEventListener("iceconnectionstatechange",()=>{const e=this.connection.iceConnectionState;e==="new"||e==="checking"||e==="completed"?this.connectionState="connecting":e==="connected"?this.connectionState="connected":e==="disconnected"?this.connectionState="disconnected":e==="closed"?this.connectionState="closed":e==="failed"?this.connectionState="failed":this.connectionState="unknown",this.bus.emit("connectionstatechange",this,this.connectionState)})}isConnectionAvaliable(){return this.connectionState==="connected"}async send(e,n,s){await this.datachannel.send({roomId:e,srcUserDeviceId:n,dstUserDeviceId:this.userDeviceId,message:s})}disconnect(){this.datachannel.close(),this.connection.close()}}class z{constructor(e,n,s){this.peers=[],this.alterChan=n,this.clk=BigInt(0),this.userDeviceId=e,this.bus=new f,this.roomId=s,this.onMessageCallback=t=>{(t.dstUserDeviceId===this.userDeviceId||t.dstUserDeviceId===m)&&(t.message[0].isUInt()&&t.message[0].toUInt()<=B&&t.message[1].isBigUInt()?this.handleProtocolMessage(t):this.bus.emit("data",this,t))},this.onNegotiate=t=>{t.makingOffer=!0,t.connection.setLocalDescription().then(()=>{const r=t.connection.localDescription;if(r){const{sdp:o,type:a}=r;return this.provideRTCOffer(t.userDeviceId,{sdp:o,type:a})}}).finally(()=>t.makingOffer=!1)},this.onIceCandidate=(t,r)=>{r.candidate&&this.sendRTCIceCandidate(t.userDeviceId,r.candidate)},n.bus.on("data",this.onMessageCallback)}async broadcast(e,n){const s=[];for(const t of this.peers)t.isConnectionAvaliable()&&s.push(t.send(this.roomId,this.userDeviceId,e));!n&&s.length===0?await this.sendToAlternativeChannel(m,e):await Promise.all(s)}findPeerById(e){for(const n of this.peers)if(n.userDeviceId===e)return n;return null}loopbackSend(e,n){this.bus.emit("data",this,{srcUserDeviceId:this.userDeviceId,dstUserDeviceId:e,message:n,roomId:this.roomId})}async send(e,n){if(e===this.userDeviceId){this.loopbackSend(e,n);return}const s=this.findPeerById(e);s&&(s.isConnectionAvaliable()?await s.send(this.roomId,this.userDeviceId,n):await this.sendToAlternativeChannel(e,n))}async broadcastPeerList(e,n){const s=e||[this.userDeviceId,...this.peers.map(r=>r.userDeviceId)],t=this.buildProtocolMessage(n?v:b,s);await this.broadcast(t)}async sendToAlternativeChannel(e,n){await this.alterChan.send({srcUserDeviceId:this.userDeviceId,dstUserDeviceId:e,roomId:this.roomId,message:n})}addPeer(e){e.datachannel.bus.on("data",this.onMessageCallback),e.bus.on("negotiationneeded",this.onNegotiate),e.bus.on("icecandidate",this.onIceCandidate),this.peers.push(e),this.bus.emit("addpeer",this,e)}removePeer(e){const n=this.peers.indexOf(e);this.peers.splice(n,1),e.datachannel.bus.detach("data",this.onMessageCallback),e.bus.detach("negotiationneeded",this.onNegotiate),e.bus.detach("icecandidate",this.onIceCandidate),this.bus.emit("removepeer",this,e)}async onSyncPeerMessage(e){const n=e.message[0].toUInt(),s=JSON.parse(e.message[2].toString()),t=Array.isArray(s)?s.filter(r=>typeof r=="string"&&R(r)):[];if(t.filter(r=>this.findPeerById(r)==null).forEach(r=>{const o=new _(r,BigInt(0));this.addPeer(o)}),n===b){const r=Math.random()*2e3;await P(r);const o=this.peers.map(a=>a.userDeviceId).filter(a=>!t.includes(a));t.includes(this.userDeviceId)||o.push(this.userDeviceId),o.length>0&&await this.broadcastPeerList(o,!0)}}handleProtocolMessage(e){if(e.srcUserDeviceId===this.userDeviceId)return;const n=e.message[0].toUInt(),s=e.message[1].toBigUInt();let t=this.findPeerById(e.srcUserDeviceId);if(!t)t=new _(e.srcUserDeviceId,s),this.addPeer(t);else if(t.clk>=s)return;n===b||n===v?this.onSyncPeerMessage(e).catch(r=>console.error(r)):n===E?this.onProvideRTCOfferMessage(e).catch(r=>console.error(r)):n===w?this.onRTCIceCandidateMessage(e).catch(r=>console.error(r)):console.error("unknown message type #%d",n)}tick(){return this.clk++}buildProtocolMessage(e,n){return[h.fromUInt(e,!0),h.fromBigUInt(this.tick(),!0),h.fromString(JSON.stringify(n),!1)]}async stop(){const e=this.alterChan.close();typeof e!="undefined"&&await e;for(const n of this.peers)n.disconnect();for(let n=0;n<this.peers.length;n++)this.peers.pop();this.bus.emit("stopped",this),this.bus.detachAll()}async provideRTCOffer(e,n){this.send(e,this.buildProtocolMessage(E,n))}async onProvideRTCOfferMessage(e){const n=JSON.parse(e.message[2].toString());if(n&&typeof n=="object"&&n.type){const s=this.findPeerById(e.srcUserDeviceId),t=n;if(s&&(await s.connection.setRemoteDescription(t),t.type==="offer")){await s.connection.setLocalDescription();const r=s.connection.localDescription;r&&await this.provideRTCOffer(e.srcUserDeviceId,r)}}}async sendRTCIceCandidate(e,n){await this.send(e,this.buildProtocolMessage(w,n.toJSON()))}async onRTCIceCandidateMessage(e){const n=JSON.parse(e.message[2].toString());if(n&&typeof n=="object"&&n.candidate){const s=n,t=this.findPeerById(e.srcUserDeviceId);t&&t.connection.remoteDescription&&t.connection.addIceCandidate(s)}}}const G="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#".split(""),C=[0,68,0,84,83,82,72,0,75,76,70,65,0,63,62,69,0,1,2,3,4,5,6,7,8,9,64,0,73,66,74,71,81,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,0,78,67,0,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,79,0,80,0,0],F=i=>{if(i.length%4!==0)throw Error("data's length must be divisible by 4");const e=i.length;let n="",s=0,t=0;for(;s<e;){const r=i[s++];if(t=t*256+r,s%4===0){let o=52200625;for(;o>=1;){const a=Math.floor(t/o)%85;n+=G[a],o/=85}t=0}}return n},Z=i=>{if(i.length%5!==0)throw Error("string's length must be divisible by 5");const e=new Uint8ClampedArray(i.length*4/5),n=i.length;let s=0,t=0,r=0;for(;t<n;){const o=i.charCodeAt(t++)-32;if(o<0||o>=C.length)return;if(r=r*85+C[o],t%5===0){let a=16777216;for(;a>=1;)e[s++]=r/a%256,a/=256;r=0}}return e};var p={encode:F,decode:Z};class O{constructor(e,n,s,t){this.rtDbChannel=e,this.rtDbBroadcastChan=n,this.supabase=s,this.bus=new f,this.rtDbChannel.on("INSERT",void 0,r=>this.onRemoteMessage(r)),this.rtDbBroadcastChan.on("INSERT",void 0,r=>this.onRemoteMessage(r)),this.rtDbChannel.onClose(()=>this.onAnyChannelClose()),this.rtDbBroadcastChan.onClose(()=>this.onAnyChannelClose()),this.roomId=t,this.rtDbChannel.isJoined()||this.rtDbChannel.isJoining()||this.rtDbChannel.subscribe(),this.rtDbBroadcastChan.isJoined()||this.rtDbBroadcastChan.isJoining()||this.rtDbBroadcastChan.subscribe()}static ofRoom(e,n,s){const t=e.channel(`realtime:public:room_message_queue:dst_user_dev_id=eq.${s}`,{selfBroadcast:!0}),r=e.channel(`realtime:public:room_message_queue:dst_user_dev_id=eq.${m}`,{selfBroadcast:!1});return new O(t,r,e,n)}async send(e){const{error:n}=await this.supabase.from("room_message_queue").insert({room:e.roomId,dst_user_dev_id:e.dstUserDeviceId,src_user_dev_id:e.srcUserDeviceId,message:e.message.map(s=>{if(s.byteLength%4!==0){const t=4-s.byteLength%4;return p.encode(s.clone(t).buffer)}else return p.encode(s.buffer)})});if(n)throw n}onAnyChannelClose(){this.close(),this.rtDbBroadcastChan.isClosed()&&this.rtDbChannel.isClosed()&&this.bus.emit("close",this)}onRemoteMessage(e){if(e.errors)return;let n=!0;const s=e.record,t={roomId:s.room,dstUserDeviceId:s.dst_user_dev_id,srcUserDeviceId:s.src_user_dev_id,message:s.message.map(r=>{if(r.length%5!==0)return n=!1,h.zero(0);const o=p.decode(r);return o?new h(o):(n=!1,h.zero(0))})};n&&this.bus.emit("data",this,t)}close(){this.rtDbChannel.isClosed()||this.rtDbChannel.unsubscribe(),this.rtDbBroadcastChan.isClosed()||this.rtDbBroadcastChan.unsubscribe()}}export{h as F,N as P,z as R,O as S};
//# sourceMappingURL=index.76b42fb2.js.map
